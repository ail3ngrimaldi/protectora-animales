/**
 * @fileoverview require default case in switch statements
 * @author Aliaksei Shytkin
 */
"use strict";

var DEFAULT_COMMENT_PATTERN = /^no default$/i; //------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = {
  meta: {
    type: "suggestion",
    docs: {
      description: "require `default` cases in `switch` statements",
      category: "Best Practices",
      recommended: false,
      url: "https://eslint.org/docs/rules/default-case"
    },
    schema: [{
      type: "object",
      properties: {
        commentPattern: {
          type: "string"
        }
      },
      additionalProperties: false
    }],
    messages: {
      missingDefaultCase: "Expected a default case."
    }
  },
  create: function create(context) {
    var options = context.options[0] || {};
    var commentPattern = options.commentPattern ? new RegExp(options.commentPattern, "u") : DEFAULT_COMMENT_PATTERN;
    var sourceCode = context.getSourceCode(); //--------------------------------------------------------------------------
    // Helpers
    //--------------------------------------------------------------------------

    /**
     * Shortcut to get last element of array
     * @param  {*[]} collection Array
     * @returns {*} Last element
     */

    function last(collection) {
      return collection[collection.length - 1];
    } //--------------------------------------------------------------------------
    // Public
    //--------------------------------------------------------------------------


    return {
      SwitchStatement: function SwitchStatement(node) {
        if (!node.cases.length) {
          /*
           * skip check of empty switch because there is no easy way
           * to extract comments inside it now
           */
          return;
        }

        var hasDefault = node.cases.some(function (v) {
          return v.test === null;
        });

        if (!hasDefault) {
          var comment;
          var lastCase = last(node.cases);
          var comments = sourceCode.getCommentsAfter(lastCase);

          if (comments.length) {
            comment = last(comments);
          }

          if (!comment || !commentPattern.test(comment.value.trim())) {
            context.report({
              node: node,
              messageId: "missingDefaultCase"
            });
          }
        }
      }
    };
  }
};