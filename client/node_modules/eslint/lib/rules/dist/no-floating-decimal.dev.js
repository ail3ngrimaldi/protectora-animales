/**
 * @fileoverview Rule to flag use of a leading/trailing decimal point in a numeric literal
 * @author James Allardice
 */
"use strict"; //------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

var astUtils = require("./utils/ast-utils"); //------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------


module.exports = {
  meta: {
    type: "suggestion",
    docs: {
      description: "disallow leading or trailing decimal points in numeric literals",
      category: "Best Practices",
      recommended: false,
      url: "https://eslint.org/docs/rules/no-floating-decimal"
    },
    schema: [],
    fixable: "code",
    messages: {
      leading: "A leading decimal point can be confused with a dot.",
      trailing: "A trailing decimal point can be confused with a dot."
    }
  },
  create: function create(context) {
    var sourceCode = context.getSourceCode();
    return {
      Literal: function Literal(node) {
        if (typeof node.value === "number") {
          if (node.raw.startsWith(".")) {
            context.report({
              node: node,
              messageId: "leading",
              fix: function fix(fixer) {
                var tokenBefore = sourceCode.getTokenBefore(node);
                var needsSpaceBefore = tokenBefore && tokenBefore.range[1] === node.range[0] && !astUtils.canTokensBeAdjacent(tokenBefore, "0".concat(node.raw));
                return fixer.insertTextBefore(node, needsSpaceBefore ? " 0" : "0");
              }
            });
          }

          if (node.raw.indexOf(".") === node.raw.length - 1) {
            context.report({
              node: node,
              messageId: "trailing",
              fix: function fix(fixer) {
                return fixer.insertTextAfter(node, "0");
              }
            });
          }
        }
      }
    };
  }
};