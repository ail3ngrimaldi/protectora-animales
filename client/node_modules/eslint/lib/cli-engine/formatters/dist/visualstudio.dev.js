/**
 * @fileoverview Visual Studio compatible formatter
 * @author Ronald Pijnacker
 */
"use strict"; //------------------------------------------------------------------------------
// Helper Functions
//------------------------------------------------------------------------------

/**
 * Returns the severity of warning or error
 * @param {Object} message message object to examine
 * @returns {string} severity level
 * @private
 */

function getMessageType(message) {
  if (message.fatal || message.severity === 2) {
    return "error";
  }

  return "warning";
} //------------------------------------------------------------------------------
// Public Interface
//------------------------------------------------------------------------------


module.exports = function (results) {
  var output = "",
      total = 0;
  results.forEach(function (result) {
    var messages = result.messages;
    total += messages.length;
    messages.forEach(function (message) {
      output += result.filePath;
      output += "(".concat(message.line || 0);
      output += message.column ? ",".concat(message.column) : "";
      output += "): ".concat(getMessageType(message));
      output += message.ruleId ? " ".concat(message.ruleId) : "";
      output += " : ".concat(message.message);
      output += "\n";
    });
  });

  if (total === 0) {
    output += "no problems";
  } else {
    output += "\n".concat(total, " problem").concat(total !== 1 ? "s" : "");
  }

  return output;
};