/**
 * @fileoverview jUnit Reporter
 * @author Jamund Ferguson
 */
"use strict";

var xmlEscape = require("../xml-escape");

var path = require("path"); //------------------------------------------------------------------------------
// Helper Functions
//------------------------------------------------------------------------------

/**
 * Returns the severity of warning or error
 * @param {Object} message message object to examine
 * @returns {string} severity level
 * @private
 */


function getMessageType(message) {
  if (message.fatal || message.severity === 2) {
    return "Error";
  }

  return "Warning";
}
/**
 * Returns a full file path without extension
 * @param {string} filePath input file path
 * @returns {string} file path without extension
 * @private
 */


function pathWithoutExt(filePath) {
  return path.posix.join(path.posix.dirname(filePath), path.basename(filePath, path.extname(filePath)));
} //------------------------------------------------------------------------------
// Public Interface
//------------------------------------------------------------------------------


module.exports = function (results) {
  var output = "";
  output += "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n";
  output += "<testsuites>\n";
  results.forEach(function (result) {
    var messages = result.messages;
    var classname = pathWithoutExt(result.filePath);

    if (messages.length > 0) {
      output += "<testsuite package=\"org.eslint\" time=\"0\" tests=\"".concat(messages.length, "\" errors=\"").concat(messages.length, "\" name=\"").concat(result.filePath, "\">\n");
      messages.forEach(function (message) {
        var type = message.fatal ? "error" : "failure";
        output += "<testcase time=\"0\" name=\"org.eslint.".concat(message.ruleId || "unknown", "\" classname=\"").concat(classname, "\">");
        output += "<".concat(type, " message=\"").concat(xmlEscape(message.message || ""), "\">");
        output += "<![CDATA[";
        output += "line ".concat(message.line || 0, ", col ");
        output += "".concat(message.column || 0, ", ").concat(getMessageType(message));
        output += " - ".concat(xmlEscape(message.message || ""));
        output += message.ruleId ? " (".concat(message.ruleId, ")") : "";
        output += "]]>";
        output += "</".concat(type, ">");
        output += "</testcase>\n";
      });
      output += "</testsuite>\n";
    } else {
      output += "<testsuite package=\"org.eslint\" time=\"0\" tests=\"1\" errors=\"0\" name=\"".concat(result.filePath, "\">\n");
      output += "<testcase time=\"0\" name=\"".concat(result.filePath, "\" classname=\"").concat(classname, "\" />\n");
      output += "</testsuite>\n";
    }
  });
  output += "</testsuites>\n";
  return output;
};