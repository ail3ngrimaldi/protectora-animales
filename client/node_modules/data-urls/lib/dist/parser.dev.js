"use strict";

var MIMEType = require("whatwg-mimetype");

var _require = require("whatwg-url"),
    parseURL = _require.parseURL,
    serializeURL = _require.serializeURL;

var _require2 = require("./utils.js"),
    stripLeadingAndTrailingASCIIWhitespace = _require2.stripLeadingAndTrailingASCIIWhitespace,
    stringPercentDecode = _require2.stringPercentDecode,
    isomorphicDecode = _require2.isomorphicDecode,
    forgivingBase64Decode = _require2.forgivingBase64Decode;

module.exports = function (stringInput) {
  var urlRecord = parseURL(stringInput);

  if (urlRecord === null) {
    return null;
  }

  return module.exports.fromURLRecord(urlRecord);
};

module.exports.fromURLRecord = function (urlRecord) {
  if (urlRecord.scheme !== "data") {
    return null;
  }

  var input = serializeURL(urlRecord, true).substring("data:".length);
  var position = 0;
  var mimeType = "";

  while (position < input.length && input[position] !== ",") {
    mimeType += input[position];
    ++position;
  }

  mimeType = stripLeadingAndTrailingASCIIWhitespace(mimeType);

  if (position === input.length) {
    return null;
  }

  ++position;
  var encodedBody = input.substring(position);
  var body = stringPercentDecode(encodedBody); // Can't use /i regexp flag because it isn't restricted to ASCII.

  var mimeTypeBase64MatchResult = /(.*); *[Bb][Aa][Ss][Ee]64$/.exec(mimeType);

  if (mimeTypeBase64MatchResult) {
    var stringBody = isomorphicDecode(body);
    body = forgivingBase64Decode(stringBody);

    if (body === null) {
      return null;
    }

    mimeType = mimeTypeBase64MatchResult[1];
  }

  if (mimeType.startsWith(";")) {
    mimeType = "text/plain" + mimeType;
  }

  var mimeTypeRecord;

  try {
    mimeTypeRecord = new MIMEType(mimeType);
  } catch (e) {
    mimeTypeRecord = new MIMEType("text/plain;charset=US-ASCII");
  }

  return {
    mimeType: mimeTypeRecord,
    body: body
  };
};