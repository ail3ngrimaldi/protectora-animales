'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = void 0;

function _pEachSeries() {
  var data = _interopRequireDefault(require('p-each-series'));

  _pEachSeries = function _pEachSeries() {
    return data;
  };

  return data;
}

function _transform() {
  var data = require('@jest/transform');

  _transform = function _transform() {
    return data;
  };

  return data;
}

function _jestUtil() {
  var data = require('jest-util');

  _jestUtil = function _jestUtil() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);
      }

      _next(undefined);
    });
  };
}

var _default =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee3(_ref4) {
    var allTests, globalConfig, moduleName, globalModulePaths;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            allTests = _ref4.allTests, globalConfig = _ref4.globalConfig, moduleName = _ref4.moduleName;
            globalModulePaths = new Set(allTests.map(function (test) {
              return test.context.config[moduleName];
            }));

            if (globalConfig[moduleName]) {
              globalModulePaths.add(globalConfig[moduleName]);
            }

            if (!(globalModulePaths.size > 0)) {
              _context3.next = 6;
              break;
            }

            _context3.next = 6;
            return (0, _pEachSeries()["default"])(Array.from(globalModulePaths),
            /*#__PURE__*/
            function () {
              var _ref2 = _asyncToGenerator(
              /*#__PURE__*/
              regeneratorRuntime.mark(function _callee2(modulePath) {
                var correctConfig, projectConfig, transformer;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        if (modulePath) {
                          _context2.next = 2;
                          break;
                        }

                        return _context2.abrupt("return");

                      case 2:
                        correctConfig = allTests.find(function (t) {
                          return t.context.config[moduleName] === modulePath;
                        });
                        projectConfig = correctConfig ? correctConfig.context.config // Fallback to first config
                        : allTests[0].context.config;
                        transformer = new (_transform().ScriptTransformer)(projectConfig);
                        _context2.next = 7;
                        return transformer.requireAndTranspileModule(modulePath,
                        /*#__PURE__*/
                        function () {
                          var _ref3 = _asyncToGenerator(
                          /*#__PURE__*/
                          regeneratorRuntime.mark(function _callee(m) {
                            var globalModule;
                            return regeneratorRuntime.wrap(function _callee$(_context) {
                              while (1) {
                                switch (_context.prev = _context.next) {
                                  case 0:
                                    globalModule = (0, _jestUtil().interopRequireDefault)(m)["default"];

                                    if (!(typeof globalModule !== 'function')) {
                                      _context.next = 3;
                                      break;
                                    }

                                    throw new TypeError("".concat(moduleName, " file must export a function at ").concat(modulePath));

                                  case 3:
                                    _context.next = 5;
                                    return globalModule(globalConfig);

                                  case 5:
                                  case "end":
                                    return _context.stop();
                                }
                              }
                            }, _callee);
                          }));

                          return function (_x3) {
                            return _ref3.apply(this, arguments);
                          };
                        }());

                      case 7:
                      case "end":
                        return _context2.stop();
                    }
                  }
                }, _callee2);
              }));

              return function (_x2) {
                return _ref2.apply(this, arguments);
              };
            }());

          case 6:
            return _context3.abrupt("return", Promise.resolve());

          case 7:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports["default"] = _default;