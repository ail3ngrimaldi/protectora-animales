'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.getSortedUsageRows = exports.filterInteractivePlugins = void 0;
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var filterInteractivePlugins = function filterInteractivePlugins(watchPlugins, globalConfig) {
  var usageInfos = watchPlugins.map(function (p) {
    return p.getUsageInfo && p.getUsageInfo(globalConfig);
  });
  return watchPlugins.filter(function (_plugin, i) {
    var usageInfo = usageInfos[i];

    if (usageInfo) {
      var key = usageInfo.key;
      return !usageInfos.slice(i + 1).some(function (u) {
        return !!u && key === u.key;
      });
    }

    return false;
  });
};

exports.filterInteractivePlugins = filterInteractivePlugins;

function notEmpty(value) {
  return value != null;
}

var getSortedUsageRows = function getSortedUsageRows(watchPlugins, globalConfig) {
  return filterInteractivePlugins(watchPlugins, globalConfig).sort(function (a, b) {
    if (a.isInternal && b.isInternal) {
      // internal plugins in the order we specify them
      return 0;
    }

    if (a.isInternal !== b.isInternal) {
      // external plugins afterwards
      return a.isInternal ? -1 : 1;
    }

    var usageInfoA = a.getUsageInfo && a.getUsageInfo(globalConfig);
    var usageInfoB = b.getUsageInfo && b.getUsageInfo(globalConfig);

    if (usageInfoA && usageInfoB) {
      // external plugins in alphabetical order
      return usageInfoA.key.localeCompare(usageInfoB.key);
    }

    return 0;
  }).map(function (p) {
    return p.getUsageInfo && p.getUsageInfo(globalConfig);
  }).filter(notEmpty);
};

exports.getSortedUsageRows = getSortedUsageRows;