/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

module.exports = function forEachBail(array, iterator, callback) {
  if (array.length === 0) return callback();
  var currentPos = array.length;
  var currentResult;
  var done = [];

  for (var i = 0; i < array.length; i++) {
    var itCb = createIteratorCallback(i);
    iterator(array[i], itCb);
    if (currentPos === 0) break;
  }

  function createIteratorCallback(i) {
    return function () {
      if (i >= currentPos) return; // ignore

      done.push(i);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (args.length > 0) {
        currentPos = i + 1;
        done = done.filter(function (item) {
          return item <= i;
        });
        currentResult = args;
      }

      if (done.length === currentPos) {
        callback.apply(null, currentResult);
        currentPos = 0;
      }
    };
  }
};

module.exports.withIndex = function forEachBailWithIndex(array, iterator, callback) {
  if (array.length === 0) return callback();
  var currentPos = array.length;
  var currentResult;
  var done = [];

  for (var i = 0; i < array.length; i++) {
    var itCb = createIteratorCallback(i);
    iterator(array[i], i, itCb);
    if (currentPos === 0) break;
  }

  function createIteratorCallback(i) {
    return function () {
      if (i >= currentPos) return; // ignore

      done.push(i);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      if (args.length > 0) {
        currentPos = i + 1;
        done = done.filter(function (item) {
          return item <= i;
        });
        currentResult = args;
      }

      if (done.length === currentPos) {
        callback.apply(null, currentResult);
        currentPos = 0;
      }
    };
  }
};