"use strict";

var __importStar = void 0 && (void 0).__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util = __importStar(require("../util"));

exports["default"] = util.createRule({
  name: 'no-require-imports',
  meta: {
    type: 'problem',
    docs: {
      description: 'Disallows invocation of `require()`',
      category: 'Best Practices',
      recommended: false
    },
    schema: [],
    messages: {
      noRequireImports: 'A `require()` style import is forbidden.'
    }
  },
  defaultOptions: [],
  create: function create(context) {
    return {
      ':matches(CallExpression, OptionalCallExpression) > Identifier[name="require"]': function matchesCallExpressionOptionalCallExpressionIdentifierNameRequire(node) {
        context.report({
          node: node.parent,
          messageId: 'noRequireImports'
        });
      },
      TSExternalModuleReference: function TSExternalModuleReference(node) {
        context.report({
          node: node,
          messageId: 'noRequireImports'
        });
      }
    };
  }
});