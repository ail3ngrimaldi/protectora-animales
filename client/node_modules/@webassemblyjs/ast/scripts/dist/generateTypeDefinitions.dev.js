"use strict";

var definitions = require("../src/definitions");

var flatMap = require("array.prototype.flatmap");

var _require = require("./util"),
    typeSignature = _require.typeSignature,
    mapProps = _require.mapProps,
    iterateProps = _require.iterateProps,
    unique = _require.unique;

var stdout = process.stdout;

function params(fields) {
  return mapProps(fields).map(typeSignature).join(",");
}

function generate() {
  stdout.write("\n    // @flow\n    /* eslint no-unused-vars: off */\n\n    // THIS FILE IS AUTOGENERATED\n    // see scripts/generateTypeDefinitions.js\n  "); // generate union types

  var unionTypes = unique(flatMap(mapProps(definitions).filter(function (d) {
    return d.unionType;
  }), function (d) {
    return d.unionType;
  }));
  unionTypes.forEach(function (unionType) {
    stdout.write("type ".concat(unionType, " = ") + mapProps(definitions).filter(function (d) {
      return d.unionType && d.unionType.includes(unionType);
    }).map(function (d) {
      return d.name;
    }).join("|") + ";\n\n");
  }); // generate the type definitions

  iterateProps(definitions, function (typeDef) {
    stdout.write("type ".concat(typeDef.name, " = {\n        ...BaseNode,\n        type: \"").concat(typeDef.name, "\",\n        ").concat(params(typeDef.fields), "\n      };\n\n"));
  });
}

generate();