'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var GetIntrinsic = require('../GetIntrinsic');

var $match = GetIntrinsic('%Symbol.match%', true);

var hasRegExpMatcher = require('is-regex');

var ToBoolean = require('./ToBoolean'); // https://ecma-international.org/ecma-262/6.0/#sec-isregexp


module.exports = function IsRegExp(argument) {
  if (!argument || _typeof(argument) !== 'object') {
    return false;
  }

  if ($match) {
    var isRegExp = argument[$match];

    if (typeof isRegExp !== 'undefined') {
      return ToBoolean(isRegExp);
    }
  }

  return hasRegExpMatcher(argument);
};