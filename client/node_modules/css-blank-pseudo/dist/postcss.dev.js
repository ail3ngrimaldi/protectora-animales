'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _interopDefault(ex) {
  return ex && _typeof(ex) === 'object' && 'default' in ex ? ex['default'] : ex;
}

var postcss = _interopDefault(require('postcss'));

var selectorRegExp = /:blank([^\w-]|$)/gi;
var postcss$1 = postcss.plugin('css-blank-pseudo', function (opts) {
  var replaceWith = String(Object(opts).replaceWith || '[blank]');
  var preserve = Boolean('preserve' in Object(opts) ? opts.preserve : true);
  return function (root) {
    root.walkRules(selectorRegExp, function (rule) {
      var selector = rule.selector.replace(selectorRegExp, function ($0, $1) {
        return "".concat(replaceWith).concat($1);
      });
      var clone = rule.clone({
        selector: selector
      });

      if (preserve) {
        rule.before(clone);
      } else {
        rule.replaceWith(clone);
      }
    });
  };
});
module.exports = postcss$1;