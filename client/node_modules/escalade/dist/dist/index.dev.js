"use strict";

var _require = require('path'),
    dirname = _require.dirname,
    resolve = _require.resolve;

var _require2 = require('fs'),
    readdir = _require2.readdir,
    stat = _require2.stat;

var _require3 = require('util'),
    promisify = _require3.promisify;

var toStats = promisify(stat);
var toRead = promisify(readdir);

module.exports = function _callee(start, callback) {
  var dir, tmp, stats;
  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          dir = resolve('.', start);
          _context.next = 3;
          return regeneratorRuntime.awrap(toStats(dir));

        case 3:
          stats = _context.sent;

          if (!stats.isDirectory()) {
            dir = dirname(dir);
          }

        case 5:
          if (!true) {
            _context.next = 23;
            break;
          }

          _context.t0 = regeneratorRuntime;
          _context.t1 = callback;
          _context.t2 = dir;
          _context.next = 11;
          return regeneratorRuntime.awrap(toRead(dir));

        case 11:
          _context.t3 = _context.sent;
          _context.t4 = (0, _context.t1)(_context.t2, _context.t3);
          _context.next = 15;
          return _context.t0.awrap.call(_context.t0, _context.t4);

        case 15:
          tmp = _context.sent;

          if (!tmp) {
            _context.next = 18;
            break;
          }

          return _context.abrupt("return", resolve(dir, tmp));

        case 18:
          dir = dirname(tmp = dir);

          if (!(tmp === dir)) {
            _context.next = 21;
            break;
          }

          return _context.abrupt("break", 23);

        case 21:
          _context.next = 5;
          break;

        case 23:
        case "end":
          return _context.stop();
      }
    }
  });
};