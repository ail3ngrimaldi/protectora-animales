'use strict';
/**
 * Create a method that will retrieve the given field from an object where that field has a function value
 * @param {string} field The field to consider
 * @returns {function(object):function} A method that gets functions from the given field
 */

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function getFieldAsFn(field) {
  return function getFromValue(value) {
    return !!value && _typeof(value) === 'object' && typeof value[field] === 'function' && value[field];
  };
}

module.exports = getFieldAsFn;