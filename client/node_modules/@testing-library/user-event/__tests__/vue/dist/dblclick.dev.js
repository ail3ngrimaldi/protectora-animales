"use strict";

var _vue = require("@testing-library/vue");

require("@testing-library/jest-dom/extend-expect");

var _src = _interopRequireDefault(require("../../src"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

afterEach(_vue.cleanup);
describe("userEvent.dblClick", function () {
  it.each(["input", "textarea"])("should fire the correct events for <%s>", function (type) {
    var events = [];
    var eventsHandler = jest.fn(function (evt) {
      return events.push(evt.type);
    });

    var _render = (0, _vue.render)({
      render: function render(h) {
        return h(type, {
          attrs: {
            "data-testid": "element"
          },
          on: {
            mouseover: eventsHandler,
            mousemove: eventsHandler,
            mousedown: eventsHandler,
            focus: eventsHandler,
            mouseup: eventsHandler,
            click: eventsHandler,
            dblclick: eventsHandler
          }
        });
      }
    }),
        getByTestId = _render.getByTestId;

    _src["default"].dblClick(getByTestId("element"));

    expect(events).toEqual(["mouseover", "mousemove", "mousedown", "focus", "mouseup", "click", "mousedown", "mouseup", "click", "dblclick"]);
  });
  it('should fire the correct events for <input type="checkbox">', function () {
    var events = [];
    var eventsHandler = jest.fn(function (evt) {
      return events.push(evt.type);
    });

    var _render2 = (0, _vue.render)({
      render: function render(h) {
        return h("input", {
          attrs: {
            type: "checkbox",
            "data-testid": "element"
          },
          on: {
            mouseover: eventsHandler,
            mousemove: eventsHandler,
            mousedown: eventsHandler,
            focus: eventsHandler,
            mouseup: eventsHandler,
            click: eventsHandler,
            change: eventsHandler
          }
        });
      }
    }),
        getByTestId = _render2.getByTestId;

    _src["default"].dblClick(getByTestId("element"));

    expect(events).toEqual(["mouseover", "mousemove", "mousedown", "mouseup", "click", "change", "mousedown", "mouseup", "click", "change"]);
    expect(getByTestId("element")).toHaveProperty("checked", false);
  });
  it("should fire the correct events for <div>", function () {
    var events = [];
    var eventsHandler = jest.fn(function (evt) {
      return events.push(evt.type);
    });

    var _render3 = (0, _vue.render)({
      render: function render(h) {
        return h("div", {
          attrs: {
            "data-testid": "div"
          },
          on: {
            mouseover: eventsHandler,
            mousemove: eventsHandler,
            mousedown: eventsHandler,
            focus: eventsHandler,
            mouseup: eventsHandler,
            click: eventsHandler,
            change: eventsHandler
          }
        });
      }
    }),
        getByTestId = _render3.getByTestId;

    _src["default"].dblClick(getByTestId("div"));

    expect(events).toEqual(["mouseover", "mousemove", "mousedown", "mouseup", "click", "mousedown", "mouseup", "click"]);
  });
});