'use strict';

var cmp = require('semver/functions/cmp');

var semver = require('semver/functions/coerce');

var has = Function.call.bind({}.hasOwnProperty);

function compare(a, operator, b) {
  return cmp(semver(a), operator, semver(b));
}

function intersection(list, order) {
  var set = list instanceof Set ? list : new Set(list);
  return order.filter(function (name) {
    return set.has(name);
  });
}

function sortObjectByKey(object, fn) {
  return Object.keys(object).sort(fn).reduce(function (memo, key) {
    memo[key] = object[key];
    return memo;
  }, {});
}

module.exports = {
  compare: compare,
  has: has,
  intersection: intersection,
  semver: semver,
  sortObjectByKey: sortObjectByKey
};