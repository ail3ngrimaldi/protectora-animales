'use strict';

var path = require('path');

var resolveFrom = require('resolve-from');

var parentModule = require('parent-module');

module.exports = function (moduleId) {
  if (typeof moduleId !== 'string') {
    throw new TypeError('Expected a string');
  }

  var parentPath = parentModule(__filename);
  var filePath = resolveFrom(path.dirname(parentPath), moduleId);
  var oldModule = require.cache[filePath]; // Delete itself from module parent

  if (oldModule && oldModule.parent) {
    var i = oldModule.parent.children.length;

    while (i--) {
      if (oldModule.parent.children[i].id === filePath) {
        oldModule.parent.children.splice(i, 1);
      }
    }
  }

  delete require.cache[filePath]; // Delete module from cache

  var parent = require.cache[parentPath]; // If `filePath` and `parentPath` are the same, cache will already be deleted so we won't get a memory leak in next step

  return parent === undefined ? require(filePath) : parent.require(filePath); // In case cache doesn't have parent, fall back to normal require
};