'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var GetIntrinsic = require('../GetIntrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var SameValue = require('./SameValue'); // https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluenonnumber


module.exports = function SameValueNonNumber(x, y) {
  if (typeof x === 'number' || _typeof(x) !== _typeof(y)) {
    throw new $TypeError('SameValueNonNumber requires two non-number values of the same type.');
  }

  return SameValue(x, y);
};