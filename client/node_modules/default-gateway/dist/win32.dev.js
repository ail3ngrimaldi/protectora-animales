"use strict";

var execa = require("execa");

var ipRegex = require("ip-regex");

var gwArgs = "path Win32_NetworkAdapterConfiguration where IPEnabled=true get DefaultIPGateway,Index /format:table".split(" ");
var ifArgs = "path Win32_NetworkAdapter get Index,NetConnectionID /format:table".split(" ");

var parse = function parse(gwTable, ifTable, family) {
  var gateway, gwid, result;
  (gwTable || "").trim().split("\n").splice(1).some(function (line) {
    var results = line.trim().split(/} +/) || [];
    var gw = results[0];
    var id = results[1];
    gateway = (ipRegex[family]().exec((gw || "").trim()) || [])[0];

    if (gateway) {
      gwid = id;
      return true;
    }
  });
  (ifTable || "").trim().split("\n").splice(1).some(function (line) {
    var i = line.indexOf(" ");
    var id = line.substr(0, i).trim();
    var name = line.substr(i + 1).trim();

    if (id === gwid) {
      result = {
        gateway: gateway,
        "interface": name ? name : null
      };
      return true;
    }
  });

  if (!result) {
    throw new Error("Unable to determine default gateway");
  }

  return result;
};

var spawnOpts = {
  windowsHide: true
};

var promise = function promise(family) {
  return Promise.all([execa.stdout("wmic", gwArgs, spawnOpts), execa.stdout("wmic", ifArgs, spawnOpts)]).then(function (results) {
    var gwTable = results[0];
    var ifTable = results[1];
    return parse(gwTable, ifTable, family);
  });
};

var sync = function sync(family) {
  var gwTable = execa.sync("wmic", gwArgs, spawnOpts).stdout;
  var ifTable = execa.sync("wmic", ifArgs, spawnOpts).stdout;
  return parse(gwTable, ifTable, family);
};

module.exports.v4 = function () {
  return promise("v4");
};

module.exports.v6 = function () {
  return promise("v6");
};

module.exports.v4.sync = function () {
  return sync("v4");
};

module.exports.v6.sync = function () {
  return sync("v6");
};