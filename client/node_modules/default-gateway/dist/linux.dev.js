"use strict";

var net = require("net");

var os = require("os");

var execa = require("execa");

var args = {
  v4: ["-4", "r"],
  v6: ["-6", "r"]
};

var parse = function parse(stdout, family) {
  var result;
  (stdout || "").trim().split("\n").some(function (line) {
    var results = /default( via .+?)?( dev .+?)( |$)/.exec(line) || [];
    var gateway = (results[1] || "").substring(5);
    var iface = (results[2] || "").substring(5);

    if (gateway && net.isIP(gateway)) {
      // default via 1.2.3.4 dev en0
      result = {
        gateway: gateway,
        "interface": iface ? iface : null
      };
      return true;
    } else if (iface && !gateway) {
      // default via dev en0
      var interfaces = os.networkInterfaces();
      var addresses = interfaces[iface];
      if (!addresses || !addresses.length) return;
      addresses.some(function (addr) {
        if (addr.family.substring(2) === family && net.isIP(addr.address)) {
          result = {
            gateway: addr.address,
            "interface": iface ? iface : null
          };
          return true;
        }
      });
    }
  });

  if (!result) {
    throw new Error("Unable to determine default gateway");
  }

  return result;
};

var promise = function promise(family) {
  return execa.stdout("ip", args[family]).then(function (stdout) {
    return parse(stdout, family);
  });
};

var sync = function sync(family) {
  var result = execa.sync("ip", args[family]);
  return parse(result.stdout, family);
};

module.exports.v4 = function () {
  return promise("v4");
};

module.exports.v6 = function () {
  return promise("v6");
};

module.exports.v4.sync = function () {
  return sync("v4");
};

module.exports.v6.sync = function () {
  return sync("v6");
};