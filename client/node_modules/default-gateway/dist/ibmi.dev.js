"use strict";

var execa = require("execa");

var db2util = "/QOpenSys/pkgs/bin/db2util";
var sql = "select NEXT_HOP, LOCAL_BINDING_INTERFACE from QSYS2.NETSTAT_ROUTE_INFO where ROUTE_TYPE='DFTROUTE' and NEXT_HOP!='*DIRECT' and CONNECTION_TYPE=?";

var parse = function parse(stdout) {
  var result;

  try {
    var resultObj = JSON.parse(stdout);
    var gateway = resultObj.records[0].NEXT_HOP;
    var iface = resultObj.records[0].LOCAL_BINDING_INTERFACE;
    result = {
      gateway: gateway,
      iface: iface
    };
  } catch (err) {}

  if (!result) {
    throw new Error("Unable to determine default gateway");
  }

  return result;
};

var promise = function promise(family) {
  return execa.stdout(db2util, [sql, "-p", family, "-o", "json"]).then(function (stdout) {
    return parse(stdout);
  });
};

var sync = function sync(family) {
  var _execa$sync = execa.sync(db2util, [sql, "-p", family, "-o", "json"]),
      stdout = _execa$sync.stdout;

  return parse(stdout);
};

module.exports.v4 = function () {
  return promise("IPV4");
};

module.exports.v6 = function () {
  return promise("IPV6");
};

module.exports.v4.sync = function () {
  return sync("IPV4");
};

module.exports.v6.sync = function () {
  return sync("IPV6");
};